const dayjs = require('dayjs');

const { hexToNum } = require('../lib/index');
const { DAY_FORMAT } = require('../lib/const');


//  一个文件内有两个时间, 这里大部分取的后一个时间 只有 XPLORE 是两个时间都取了
//  s 代表前  e 代表后

const tps = [
    // 00100873
    {
        type: 's',
        a: [0x88, 0xEA, 0x18, 0xAE, 0xE5, 0x35, 0xE1, 0x00],
        t: "2008/10/01 23:19:04",
    },
    {
        type: 'e',
        a: [0x80, 0x44, 0x52, 0x43, 0x94, 0x52, 0xE1, 0x00],
        t: "2008/10/01 23:19:04",
    },

    // 0010007c
    {
        type: 's',
        a: [0x60, 0xB3, 0x93, 0x13, 0xAE, 0x50, 0xE1, 0x00],
        t: "2009/09/07 19:19:02",
    },
    {
        type: 'e',
        a: [0x80, 0x1F, 0x18, 0x12, 0xAE, 0x50, 0xE1, 0x00],
        t: "2009/09/07 19:19:02",
    },


    // 00101784
    {
        type: 's',
        a: [0x13, 0x11, 0xB0, 0x63, 0xDC, 0x59, 0xE1, 0x00],
        t: "2010/01/02 15:21:00",
    },
    {
        type: 'e',
        a: [0xC0, 0x73, 0x33, 0x67, 0xDC, 0x59, 0xE1, 0x00],
        t: "2010/01/02 15:21:00",
    },

    // 0010456b XPLORE
    {
        type: 's',
        a: [0xF1, 0xF5, 0xA8, 0x76, 0xAB, 0x70, 0xE1, 0x00],
        t: "2010/10/19 21:38:12",
    },
    {
        type: 'e',
        a: [0x40, 0x5F, 0x47, 0x7F, 0xAB, 0x70, 0xE1, 0x00],
        t: "2010/10/19 21:38:12",
    },


    // 0010448f
    {
        type: 's',
        a: [0xD8, 0xA0, 0x1A, 0xE7, 0x05, 0x70, 0xE1, 0x00],
        t: "2010/10/11 16:06:54",
    },
    {
        type: 'e',
        a: [0x40, 0x93, 0x21, 0xEF, 0x05, 0x70, 0xE1, 0x00],
        t: "2010/10/11 16:06:54",
    },

    // 001049B3  <--- 对不上
    {
        type: 's',
        a: [0xA2, 0xFD, 0xEF, 0x9E, 0xA3, 0x73, 0xE1, 0x00],
        t: "2010/11/26 08:32:23",
    },
    {
        type: 'e',
        a: [0x40, 0x84, 0xE6, 0xA1, 0xA3, 0x73, 0xE1, 0x00],
        t: "2010/11/26 08:32:23",
    },


    // 0010512A
    {
        type: 's',
        a: [0xBE, 0xB0, 0x31, 0x20, 0xC0, 0x79, 0xE1, 0x00],
        t: "2011/02/12 11:04:00",
    },
    {
        type: 'e',
        a: [0x00, 0x1E, 0x95, 0x21, 0xC0, 0x79, 0xE1, 0x00],
        t: "2011/02/12 11:04:00",
    },


    // 00100aee
    {
        type: 's',
        a: [0xE8, 0x19, 0x3C, 0x68, 0x8D, 0x53, 0xE1, 0x00],
        t: "2009/10/14 08:36:04",
    },
    {
        type: 'e',
        a: [0x00, 0x16, 0x00, 0x72, 0x8D, 0x53, 0xE1, 0x00],
        t: "2009/10/14 08:36:04",
    },


    // 00105A7D

    {
        type: 's',
        a: [0x76, 0x66, 0x18, 0x7C, 0xB7, 0x81, 0xE1, 0x00],
        t: "2011/05/24 20:07:00",
    },
    {
        type: 'e',
        a: [0xC0, 0x1D, 0xA7, 0x7D, 0xB7, 0x81, 0xE1, 0x00],
        t: "2011/05/24 20:07:00",
    },


    // 001003b6
    {
        type: 's',
        a: [0xBB, 0x38, 0x8D, 0x57, 0x53, 0xA6, 0xE1, 0x00],
        t: "2012/09/01 17:10:41",
    },
    {
        type: 'e',
        a: [0xC0, 0x67, 0xA9, 0x5C, 0x53, 0xA6, 0xE1, 0x00],
        t: "2012/09/01 17:10:41",
    },

    // 0010130a
    {
        type: 's',
        a: [0xF5, 0xFE, 0x30, 0x37, 0x60, 0xB6, 0xE1, 0x00],
        t: "2013/03/24 23:15:18",
    },
    {
        type: 'e',
        a: [0x40, 0xB6, 0x3B, 0x43, 0x60, 0xB6, 0xE1, 0x00],
        t: "2013/03/24 23:15:18",
    },

    // 00101309
    {
        type: 's',
        a: [0x09, 0x0E, 0xB6, 0x34, 0x60, 0xB6, 0xE1, 0x00],
        t: "2013/03/24 23:14:37",
    },
    {
        type: 'e',
        a: [0x00, 0x3E, 0xBE, 0x41, 0x60, 0xB6, 0xE1, 0x00],
        t: "2013/03/24 23:14:37",
    },


    // 00102134
    {
        type: 's',
        a: [0xB0, 0x3F, 0x73, 0x97, 0xDD, 0xC7, 0xE1, 0x00],
        t: "2013/11/02 12:58:22",
    },
    {
        type: 'e',
        a: [0x00, 0x3B, 0x35, 0x99, 0xDD, 0xC7, 0xE1, 0x00],
        t: "2013/11/02 12:58:22",
    },
];


/**
 * @name:
 * @description: 初始化对象中的值  其中标准值得出的毫秒无意义 舍弃
 * @param {*} tps
 * @return {*}
 */
const init = tps.map(v => {
    v.HEX_NUM = hexToNum(v.a);
    const standard_ms = dayjs(v.t, DAY_FORMAT, true).valueOf();
    v.s_s = parseInt(standard_ms / 1000, 10);
    return v;
});






module.exports = init;
